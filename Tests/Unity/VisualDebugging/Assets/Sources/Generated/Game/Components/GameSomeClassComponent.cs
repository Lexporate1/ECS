//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SomeClassComponent someClass { get { return (SomeClassComponent)GetComponent(GameComponentsLookup.SomeClass); } }
    public bool hasSomeClass { get { return HasComponent(GameComponentsLookup.SomeClass); } }

    public void AddSomeClass(SomeClass newValue) {
        var index = GameComponentsLookup.SomeClass;
        var component = (SomeClassComponent)CreateComponent(index, typeof(SomeClassComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSomeClass(SomeClass newValue) {
        var index = GameComponentsLookup.SomeClass;
        var component = (SomeClassComponent)CreateComponent(index, typeof(SomeClassComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSomeClass() {
        RemoveComponent(GameComponentsLookup.SomeClass);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSomeClass;

    public static Entitas.IMatcher<GameEntity> SomeClass {
        get {
            if (_matcherSomeClass == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SomeClass);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSomeClass = matcher;
            }

            return _matcherSomeClass;
        }
    }
}
