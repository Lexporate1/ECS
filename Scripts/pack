#!/bin/bash -e
echo $0
source "$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)/consts"

$SCRIPTS/update
$SCRIPTS/docs

# collect
COLLECTED_DIR="$BUILD_SRC/files"
mkdir $COLLECTED_DIR "$COLLECTED_DIR/Migration" "$COLLECTED_DIR/Images"
cp -v "$ROOT/EntitasUpgradeGuide.md" "$COLLECTED_DIR/EntitasUpgradeGuide.md"
cp -v "$ROOT/LICENSE.txt" "$COLLECTED_DIR/LICENSE.txt"
cp -v "$ROOT/README.md" "$COLLECTED_DIR/README.md"
cp -v "$ROOT/RELEASE_NOTES.md" "$COLLECTED_DIR/RELEASE_NOTES.md"

cp "$BUILD_SRC/$DNS.Migration.CLI.exe" "$COLLECTED_DIR/Migration/MigrationAssistant.exe"
cp "$BUILD_SRC/$DNS.Migration.dll" "$COLLECTED_DIR/Migration/$DNS.Migration.dll"
cp "$DDD.Utils.dll" "$COLLECTED_DIR/Migration"

cp "$ADDONS/$DNS.Unity.Editor/$DNS.Unity.Editor/Images/"* "$COLLECTED_DIR/Images"
cp "$ADDONS/$DNS.VisualDebugging.Unity.Editor/$DNS.VisualDebugging.Unity.Editor/Images/"* "$COLLECTED_DIR/Images"


TMP_DIR="$BUILD/tmp"
TMP_ENTITAS="$TMP_DIR/Entitas"
TMP_CG="$TMP_DIR/CodeGenerator"
CG_PLUGINS="$TMP_CG/Plugins"
CG_P_ES="$CG_PLUGINS/Entitas"
CG_P_DD="$CG_PLUGINS/Jenny"

# create c# zip ------------------------------------------------------------
mkdir $TMP_DIR $TMP_ENTITAS $TMP_CG $CG_PLUGINS $CG_P_ES $CG_P_DD

# --- Entitas
cp "$BUILD_SRC/$DNS.dll" $TMP_ENTITAS
cp "$BUILD_SRC/$DNS.CodeGeneration.Attributes.dll" $TMP_ENTITAS
# ---
cp "$DDD.Utils.dll" $TMP_ENTITAS
# ---
cp "$COLLECTED_DIR/"* $TMP_DIR || true
cp -r "$COLLECTED_DIR/Migration" $TMP_DIR

# --- Code Generator
cp "$DDD.CLI.dll" $TMP_CG
cp "$DDD.CodeGeneration.dll" $TMP_CG
cp "$DDD.CodeGeneration.CodeGenerator.dll" $TMP_CG
cp "$DDD.CodeGeneration.CodeGenerator.CLI.exe" "$TMP_CG/Jenny.exe"
cp "$DDD.Logging.dll" $TMP_CG
cp "$DDD.Logging.Formatters.dll" $TMP_CG
cp "$DDD.Networking.dll" $TMP_CG
cp "$DDD.Serialization.dll" $TMP_CG
cp "$DDD.Utils.dll" $TMP_CG

# --- Jenny
cp "$DDD.CodeGeneration.Plugins.dll" $CG_P_DD
cp "$DDD.Analytics.dll" $CG_P_DD
# --- Entitas
cp "$BUILD_SRC/$DNS.CodeGeneration.Plugins.dll" $CG_P_ES
cp "$BUILD_SRC/$DNS.CodeGeneration.Attributes.dll" $CG_P_ES
cp "$DDD.Analytics.dll" $CG_P_ES
cp "$BUILD_SRC/$DNS.dll" $CG_P_ES

# zip
cp -r $DOCS "$TMP_DIR/Documentation"
pushd $TMP_DIR > /dev/null
  zip -rq "$BUILD_DEPLOY/$PROJECT_NAME-CSharp.zip" ./
popd > /dev/null
rm -rf $TMP_DIR
# --------------------------------------------------------------------------



# # create unity zip ---------------------------------------------------------
TMP_EDITOR="$TMP_ENTITAS/Editor"
mkdir $TMP_DIR $TMP_ENTITAS $TMP_EDITOR $TMP_CG $CG_PLUGINS $CG_P_ES $CG_P_DD

# --- Entitas
cp "$BUILD_SRC/$DNS.dll" $TMP_ENTITAS
cp "$BUILD_SRC/$DNS.CodeGeneration.Attributes.dll" $TMP_ENTITAS
cp "$BUILD_SRC/$DNS.CodeGeneration.Plugins.dll" $TMP_EDITOR
cp "$BUILD_SRC/$DNS.Migration.dll" $TMP_EDITOR
cp "$BUILD_SRC/$DNS.Migration.Unity.Editor.dll" $TMP_EDITOR
cp "$BUILD_SRC/$DNS.Unity.dll" $TMP_ENTITAS
cp "$BUILD_SRC/$DNS.Unity.Editor.dll" $TMP_EDITOR
cp "$BUILD_SRC/$DNS.VisualDebugging.CodeGeneration.Plugins.dll" $TMP_EDITOR
cp "$BUILD_SRC/$DNS.VisualDebugging.Unity.dll" $TMP_ENTITAS
cp "$BUILD_SRC/$DNS.VisualDebugging.Unity.Editor.dll" $TMP_EDITOR
# ---
cp "$LIBS/Compile.cs" $TMP_ENTITAS
# ---
cp "$DDD.CodeGeneration.dll" $TMP_EDITOR
cp "$DDD.CodeGeneration.CodeGenerator.dll" $TMP_EDITOR
cp "$DDD.CodeGeneration.CodeGenerator.Unity.Editor.dll" $TMP_EDITOR
cp "$DDD.CodeGeneration.Plugins.dll" $TMP_EDITOR
cp "$DDD.CodeGeneration.Unity.Plugins.dll" $TMP_EDITOR
cp "$DDD.Analytics.dll" $TMP_EDITOR
cp "$DDD.Logging.dll" $TMP_ENTITAS
cp "$DDD.Networking.dll" $TMP_ENTITAS
cp "$DDD.Unity.Editor.dll" $TMP_EDITOR
cp "$DDD.Serialization.dll" $TMP_ENTITAS
cp "$DDD.Utils.dll" $TMP_ENTITAS

# --- Code Generator
cp "$DDD.CodeGeneration.CodeGenerator.CLI.exe" "$TMP_CG/Jenny.exe"
cp "$DDD.CLI.dll" $TMP_CG
cp "$DDD.CodeGeneration.dll" $TMP_CG
cp "$DDD.CodeGeneration.CodeGenerator.dll" $TMP_CG
cp "$DDD.Logging.dll" $TMP_CG
cp "$DDD.Logging.Formatters.dll" $TMP_CG
cp "$DDD.Networking.dll" $TMP_CG
cp "$DDD.Serialization.dll" $TMP_CG
cp "$DDD.Utils.dll" $TMP_CG

# --- Jenny
cp "$DDD.CodeGeneration.Plugins.dll" $CG_P_DD
cp "$DDD.CodeGeneration.Unity.Plugins.dll" $CG_P_DD
cp "$DDD.Analytics.dll" $CG_P_DD
# --- Entitas
cp "$BUILD_SRC/$DNS.CodeGeneration.Plugins.dll" $CG_P_ES
cp "$BUILD_SRC/$DNS.CodeGeneration.Attributes.dll" $CG_P_ES
cp "$DDD.Analytics.dll" $CG_P_ES
cp "$BUILD_SRC/$DNS.VisualDebugging.CodeGeneration.Plugins.dll" $CG_P_ES
cp "$BUILD_SRC/$DNS.dll" $CG_P_ES

cp "$COLLECTED_DIR/"* $TMP_DIR || true
cp -r "$COLLECTED_DIR/Migration" $TMP_DIR
cp -r "$COLLECTED_DIR/Images" $TMP_EDITOR

cp -r $DOCS "$TMP_DIR/Documentation"
pushd $TMP_DIR > /dev/null
  zip -rq "$BUILD_DEPLOY/$PROJECT_NAME-Unity.zip" ./
popd > /dev/null
rm -rf $TMP_DIR
# --------------------------------------------------------------------------

# create docset tgz
pushd "$BUILD_DOCS/docset" > /dev/null
tar --exclude='.DS_Store' -czf "$BUILD_DEPLOY/$PROJECT_NAME.docset.tgz" $PROJECT_NAME.docset
popd > /dev/null

# generate tree file

# ensure tree is installed
command -v tree >/dev/null 2>&1 || {
    echo >&2 "Error: tree not found! tree is required to generate tree.txt. Try \"brew install tree\".";
    exit 1;
}

TREE_IGNORE="bin|obj|Library|Libraries|*Tests|Readme|ProjectSettings|Build|docs|Temp|Examples|*.csproj|*.meta|*.sln|*.userprefs|*.properties"
pushd $ROOT > /dev/null
  tree -I $TREE_IGNORE --noreport -d > tree.txt
  tree -I $TREE_IGNORE --noreport --dirsfirst >> tree.txt
  cat tree.txt
popd > /dev/null
