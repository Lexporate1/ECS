//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public My.Namespace.EntityIndexNoContextComponent myNamespaceEntityIndexNoContext { get { return (My.Namespace.EntityIndexNoContextComponent)GetComponent(GameComponentLookup.MyNamespaceEntityIndexNoContext); } }
    public bool hasMyNamespaceEntityIndexNoContext { get { return HasComponent(GameComponentLookup.MyNamespaceEntityIndexNoContext); } }

    public void AddMyNamespaceEntityIndexNoContext(string newValue) {
        var index = GameComponentLookup.MyNamespaceEntityIndexNoContext;
        var component = CreateComponent<My.Namespace.EntityIndexNoContextComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMyNamespaceEntityIndexNoContext(string newValue) {
        var index = GameComponentLookup.MyNamespaceEntityIndexNoContext;
        var component = CreateComponent<My.Namespace.EntityIndexNoContextComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMyNamespaceEntityIndexNoContext() {
        RemoveComponent(GameComponentLookup.MyNamespaceEntityIndexNoContext);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMyNamespaceEntityIndexNoContext;

    public static Entitas.IMatcher<GameEntity> MyNamespaceEntityIndexNoContext {
        get {
            if (_matcherMyNamespaceEntityIndexNoContext == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentLookup.MyNamespaceEntityIndexNoContext);
                matcher.componentNames = GameComponentLookup.componentNames;
                _matcherMyNamespaceEntityIndexNoContext = matcher;
            }

            return _matcherMyNamespaceEntityIndexNoContext;
        }
    }
}
