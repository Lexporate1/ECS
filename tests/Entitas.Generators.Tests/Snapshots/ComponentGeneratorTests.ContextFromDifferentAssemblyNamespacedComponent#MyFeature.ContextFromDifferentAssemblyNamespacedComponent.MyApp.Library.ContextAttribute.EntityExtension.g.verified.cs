//HintName: MyFeature.ContextFromDifferentAssemblyNamespacedComponent.MyApp.Library.ContextAttribute.EntityExtension.g.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by
//     Entitas.Generators.ComponentGenerator.EntityExtension
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using MyApp.Library.ContextAttribute;
using static MyFeature.MyAppLibraryContextAttributeContextFromDifferentAssemblyNamespacedComponentIndex;

namespace MyFeature
{
public static class MyAppLibraryContextAttributeContextFromDifferentAssemblyNamespacedEntityExtension
{
    static readonly ContextFromDifferentAssemblyNamespacedComponent SingleContextFromDifferentAssemblyNamespacedComponent = new ContextFromDifferentAssemblyNamespacedComponent();

    public static bool HasContextFromDifferentAssemblyNamespaced(this Entity entity)
    {
        return entity.HasComponent(Index.Value);
    }

    public static Entity AddContextFromDifferentAssemblyNamespaced(this Entity entity)
    {
        entity.AddComponent(Index.Value, SingleContextFromDifferentAssemblyNamespacedComponent);
        return entity;
    }

    public static Entity ReplaceContextFromDifferentAssemblyNamespaced(this Entity entity)
    {
        entity.ReplaceComponent(Index.Value, SingleContextFromDifferentAssemblyNamespacedComponent);
        return entity;
    }

    public static Entity RemoveContextFromDifferentAssemblyNamespaced(this Entity entity)
    {
        entity.RemoveComponent(Index.Value);
        return entity;
    }

    public static ContextFromDifferentAssemblyNamespacedComponent GetContextFromDifferentAssemblyNamespaced(this Entity entity)
    {
        return (ContextFromDifferentAssemblyNamespacedComponent)entity.GetComponent(Index.Value);
    }
}
}
