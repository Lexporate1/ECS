//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DateTimeComponent dateTime { get { return (DateTimeComponent)GetComponent(GameComponentsLookup.DateTime); } }
    public bool hasDateTime { get { return HasComponent(GameComponentsLookup.DateTime); } }

    public void AddDateTime(System.DateTime newDate) {
        var index = GameComponentsLookup.DateTime;
        var component = CreateComponent<DateTimeComponent>(index);
        component.date = newDate;
        AddComponent(index, component);
    }

    public void ReplaceDateTime(System.DateTime newDate) {
        var index = GameComponentsLookup.DateTime;
        var component = CreateComponent<DateTimeComponent>(index);
        component.date = newDate;
        ReplaceComponent(index, component);
    }

    public void RemoveDateTime() {
        RemoveComponent(GameComponentsLookup.DateTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDateTime;

    public static Entitas.IMatcher<GameEntity> DateTime {
        get {
            if (_matcherDateTime == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DateTime);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDateTime = matcher;
            }

            return _matcherDateTime;
        }
    }
}
