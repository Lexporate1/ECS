//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Test1Context {

    public Test1Entity uniqueEventEntity { get { return GetGroup(Test1Matcher.UniqueEvent).GetSingleEntity(); } }
    public UniqueEventComponent uniqueEvent { get { return uniqueEventEntity.uniqueEvent; } }
    public bool hasUniqueEvent { get { return uniqueEventEntity != null; } }

    public Test1Entity SetUniqueEvent(string newValue) {
        if (hasUniqueEvent) {
            throw new Entitas.EntitasException("Could not set UniqueEvent!\n" + this + " already has an entity with UniqueEventComponent!",
                "You should check if the context already has a uniqueEventEntity before setting it or use context.ReplaceUniqueEvent().");
        }
        var entity = CreateEntity();
        entity.AddUniqueEvent(newValue);
        return entity;
    }

    public void ReplaceUniqueEvent(string newValue) {
        var entity = uniqueEventEntity;
        if (entity == null) {
            entity = SetUniqueEvent(newValue);
        } else {
            entity.ReplaceUniqueEvent(newValue);
        }
    }

    public void RemoveUniqueEvent() {
        uniqueEventEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Test1Entity {

    public UniqueEventComponent uniqueEvent { get { return (UniqueEventComponent)GetComponent(Test1ComponentsLookup.UniqueEvent); } }
    public bool hasUniqueEvent { get { return HasComponent(Test1ComponentsLookup.UniqueEvent); } }

    public void AddUniqueEvent(string newValue) {
        var index = Test1ComponentsLookup.UniqueEvent;
        var component = (UniqueEventComponent)CreateComponent(index, typeof(UniqueEventComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceUniqueEvent(string newValue) {
        var index = Test1ComponentsLookup.UniqueEvent;
        var component = (UniqueEventComponent)CreateComponent(index, typeof(UniqueEventComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveUniqueEvent() {
        RemoveComponent(Test1ComponentsLookup.UniqueEvent);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class Test1Matcher {

    static Entitas.IMatcher<Test1Entity> _matcherUniqueEvent;

    public static Entitas.IMatcher<Test1Entity> UniqueEvent {
        get {
            if (_matcherUniqueEvent == null) {
                var matcher = (Entitas.Matcher<Test1Entity>)Entitas.Matcher<Test1Entity>.AllOf(Test1ComponentsLookup.UniqueEvent);
                matcher.componentNames = Test1ComponentsLookup.componentNames;
                _matcherUniqueEvent = matcher;
            }

            return _matcherUniqueEvent;
        }
    }
}
