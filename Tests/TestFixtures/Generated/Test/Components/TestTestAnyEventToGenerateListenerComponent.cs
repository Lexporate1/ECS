//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TestEntity {

    public TestAnyEventToGenerateListenerComponent testAnyEventToGenerateListener { get { return (TestAnyEventToGenerateListenerComponent)GetComponent(TestComponentsLookup.TestAnyEventToGenerateListener); } }
    public bool hasTestAnyEventToGenerateListener { get { return HasComponent(TestComponentsLookup.TestAnyEventToGenerateListener); } }

    public void AddTestAnyEventToGenerateListener(System.Collections.Generic.List<ITestAnyEventToGenerateListener> newValue) {
        var index = TestComponentsLookup.TestAnyEventToGenerateListener;
        var component = (TestAnyEventToGenerateListenerComponent)CreateComponent(index, typeof(TestAnyEventToGenerateListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTestAnyEventToGenerateListener(System.Collections.Generic.List<ITestAnyEventToGenerateListener> newValue) {
        var index = TestComponentsLookup.TestAnyEventToGenerateListener;
        var component = (TestAnyEventToGenerateListenerComponent)CreateComponent(index, typeof(TestAnyEventToGenerateListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTestAnyEventToGenerateListener() {
        RemoveComponent(TestComponentsLookup.TestAnyEventToGenerateListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TestMatcher {

    static Entitas.IMatcher<TestEntity> _matcherTestAnyEventToGenerateListener;

    public static Entitas.IMatcher<TestEntity> TestAnyEventToGenerateListener {
        get {
            if (_matcherTestAnyEventToGenerateListener == null) {
                var matcher = (Entitas.Matcher<TestEntity>)Entitas.Matcher<TestEntity>.AllOf(TestComponentsLookup.TestAnyEventToGenerateListener);
                matcher.componentNames = TestComponentsLookup.componentNames;
                _matcherTestAnyEventToGenerateListener = matcher;
            }

            return _matcherTestAnyEventToGenerateListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TestEntity {

    public void AddTestAnyEventToGenerateListener(ITestAnyEventToGenerateListener value) {
        var listeners = hasTestAnyEventToGenerateListener
            ? testAnyEventToGenerateListener.value
            : new System.Collections.Generic.List<ITestAnyEventToGenerateListener>();
        listeners.Add(value);
        ReplaceTestAnyEventToGenerateListener(listeners);
    }

    public void RemoveTestAnyEventToGenerateListener(ITestAnyEventToGenerateListener value, bool removeComponentWhenEmpty = true) {
        var listeners = testAnyEventToGenerateListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveTestAnyEventToGenerateListener();
        } else {
            ReplaceTestAnyEventToGenerateListener(listeners);
        }
    }
}
