//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public HashSetComponent hashSet { get { return (HashSetComponent)GetComponent(GameComponentsLookup.HashSet); } }
    public bool hasHashSet { get { return HasComponent(GameComponentsLookup.HashSet); } }

    public void AddHashSet(System.Collections.Generic.HashSet<string> newHashset) {
        var index = GameComponentsLookup.HashSet;
        var component = CreateComponent<HashSetComponent>(index);
        component.hashset = newHashset;
        AddComponent(index, component);
    }

    public void ReplaceHashSet(System.Collections.Generic.HashSet<string> newHashset) {
        var index = GameComponentsLookup.HashSet;
        var component = CreateComponent<HashSetComponent>(index);
        component.hashset = newHashset;
        ReplaceComponent(index, component);
    }

    public void RemoveHashSet() {
        RemoveComponent(GameComponentsLookup.HashSet);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHashSet;

    public static Entitas.IMatcher<GameEntity> HashSet {
        get {
            if (_matcherHashSet == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HashSet);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHashSet = matcher;
            }

            return _matcherHashSet;
        }
    }
}
