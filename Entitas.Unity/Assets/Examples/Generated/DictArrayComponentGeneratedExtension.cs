//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public DictArrayComponent dictArray { get { return (DictArrayComponent)GetComponent(ComponentIds.DictArray); } }

        public bool hasDictArray { get { return HasComponent(ComponentIds.DictArray); } }

        public Entity AddDictArray(System.Collections.Generic.Dictionary<int, string[]> newDict, System.Collections.Generic.Dictionary<int, string[]>[] newDictArray) {
            var componentPool = GetComponentPool(ComponentIds.DictArray);
            var component = (DictArrayComponent)(componentPool.Count > 0 ? componentPool.Pop() : new DictArrayComponent());
            component.dict = newDict;
            component.dictArray = newDictArray;
            return AddComponent(ComponentIds.DictArray, component);
        }

        public Entity ReplaceDictArray(System.Collections.Generic.Dictionary<int, string[]> newDict, System.Collections.Generic.Dictionary<int, string[]>[] newDictArray) {
            var componentPool = GetComponentPool(ComponentIds.DictArray);
            var component = (DictArrayComponent)(componentPool.Count > 0 ? componentPool.Pop() : new DictArrayComponent());
            component.dict = newDict;
            component.dictArray = newDictArray;
            ReplaceComponent(ComponentIds.DictArray, component);
            return this;
        }

        public Entity RemoveDictArray() {
            return RemoveComponent(ComponentIds.DictArray);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherDictArray;

        public static IMatcher DictArray {
            get {
                if (_matcherDictArray == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.DictArray);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherDictArray = matcher;
                }

                return _matcherDictArray;
            }
        }
    }
}
