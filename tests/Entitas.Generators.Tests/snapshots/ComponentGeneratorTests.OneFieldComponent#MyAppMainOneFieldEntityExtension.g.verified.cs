//HintName: MyAppMainOneFieldEntityExtension.g.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by
//     Entitas.Generators.ComponentGenerator.EntityExtension
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class MyAppMainOneFieldEntityExtension
{
    public static bool HasOneField(this global::MyApp.Main.Entity entity)
    {
        return entity.HasComponent(MyAppMainOneFieldComponentIndex.Index.Value);
    }

    public static global::MyApp.Main.Entity AddOneField(this global::MyApp.Main.Entity entity, string value)
    {
        var index = MyAppMainOneFieldComponentIndex.Index.Value;
        var componentPool = entity.GetComponentPool(index);
        var component = componentPool.Count > 0
            ? (OneFieldComponent)componentPool.Pop()
            : new OneFieldComponent();
        component.Value = value;
        entity.AddComponent(index, component);
        return entity;
    }

    public static global::MyApp.Main.Entity ReplaceOneField(this global::MyApp.Main.Entity entity, string value)
    {
        var index = MyAppMainOneFieldComponentIndex.Index.Value;
        var componentPool = entity.GetComponentPool(index);
        var component = componentPool.Count > 0
            ? (OneFieldComponent)componentPool.Pop()
            : new OneFieldComponent();
        component.Value = value;
        entity.ReplaceComponent(index, component);
        return entity;
    }

    public static global::MyApp.Main.Entity RemoveOneField(this global::MyApp.Main.Entity entity)
    {
        entity.RemoveComponent(MyAppMainOneFieldComponentIndex.Index.Value);
        return entity;
    }

    public static OneFieldComponent GetOneField(this global::MyApp.Main.Entity entity)
    {
        return (OneFieldComponent)entity.GetComponent(MyAppMainOneFieldComponentIndex.Index.Value);
    }
}
