//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public JaggedArrayComponent jaggedArray { get { return (JaggedArrayComponent)GetComponent(GameComponentsLookup.JaggedArray); } }
    public bool hasJaggedArray { get { return HasComponent(GameComponentsLookup.JaggedArray); } }

    public void AddJaggedArray(string[][] newJaggedArray) {
        var index = GameComponentsLookup.JaggedArray;
        var component = CreateComponent<JaggedArrayComponent>(index);
        component.jaggedArray = newJaggedArray;
        AddComponent(index, component);
    }

    public void ReplaceJaggedArray(string[][] newJaggedArray) {
        var index = GameComponentsLookup.JaggedArray;
        var component = CreateComponent<JaggedArrayComponent>(index);
        component.jaggedArray = newJaggedArray;
        ReplaceComponent(index, component);
    }

    public void RemoveJaggedArray() {
        RemoveComponent(GameComponentsLookup.JaggedArray);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherJaggedArray;

    public static Entitas.IMatcher<GameEntity> JaggedArray {
        get {
            if (_matcherJaggedArray == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.JaggedArray);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherJaggedArray = matcher;
            }

            return _matcherJaggedArray;
        }
    }
}
