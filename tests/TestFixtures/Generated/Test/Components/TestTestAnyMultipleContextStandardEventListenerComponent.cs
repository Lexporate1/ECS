//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TestEntity {

    public TestAnyMultipleContextStandardEventListenerComponent testAnyMultipleContextStandardEventListener { get { return (TestAnyMultipleContextStandardEventListenerComponent)GetComponent(TestComponentsLookup.TestAnyMultipleContextStandardEventListener); } }
    public bool hasTestAnyMultipleContextStandardEventListener { get { return HasComponent(TestComponentsLookup.TestAnyMultipleContextStandardEventListener); } }

    public void AddTestAnyMultipleContextStandardEventListener(System.Collections.Generic.List<ITestAnyMultipleContextStandardEventListener> newValue) {
        var index = TestComponentsLookup.TestAnyMultipleContextStandardEventListener;
        var component = (TestAnyMultipleContextStandardEventListenerComponent)CreateComponent(index, typeof(TestAnyMultipleContextStandardEventListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTestAnyMultipleContextStandardEventListener(System.Collections.Generic.List<ITestAnyMultipleContextStandardEventListener> newValue) {
        var index = TestComponentsLookup.TestAnyMultipleContextStandardEventListener;
        var component = (TestAnyMultipleContextStandardEventListenerComponent)CreateComponent(index, typeof(TestAnyMultipleContextStandardEventListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTestAnyMultipleContextStandardEventListener() {
        RemoveComponent(TestComponentsLookup.TestAnyMultipleContextStandardEventListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TestMatcher {

    static Entitas.IMatcher<TestEntity> _matcherTestAnyMultipleContextStandardEventListener;

    public static Entitas.IMatcher<TestEntity> TestAnyMultipleContextStandardEventListener {
        get {
            if (_matcherTestAnyMultipleContextStandardEventListener == null) {
                var matcher = (Entitas.Matcher<TestEntity>)Entitas.Matcher<TestEntity>.AllOf(TestComponentsLookup.TestAnyMultipleContextStandardEventListener);
                matcher.componentNames = TestComponentsLookup.componentNames;
                _matcherTestAnyMultipleContextStandardEventListener = matcher;
            }

            return _matcherTestAnyMultipleContextStandardEventListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TestEntity {

    public void AddTestAnyMultipleContextStandardEventListener(ITestAnyMultipleContextStandardEventListener value) {
        var listeners = hasTestAnyMultipleContextStandardEventListener
            ? testAnyMultipleContextStandardEventListener.value
            : new System.Collections.Generic.List<ITestAnyMultipleContextStandardEventListener>();
        listeners.Add(value);
        ReplaceTestAnyMultipleContextStandardEventListener(listeners);
    }

    public void RemoveTestAnyMultipleContextStandardEventListener(ITestAnyMultipleContextStandardEventListener value, bool removeComponentWhenEmpty = true) {
        var listeners = testAnyMultipleContextStandardEventListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveTestAnyMultipleContextStandardEventListener();
        } else {
            ReplaceTestAnyMultipleContextStandardEventListener(listeners);
        }
    }
}
