//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public sealed partial class VisualDebuggingEntity : XXXEntity {

        public PropertyComponent property { get { return (PropertyComponent)GetComponent(VisualDebuggingComponentIds.Property); } }
        public bool hasProperty { get { return HasComponent(VisualDebuggingComponentIds.Property); } }

        public void AddProperty(string newValue) {
            var component = CreateComponent<PropertyComponent>(VisualDebuggingComponentIds.Property);
            component.value = newValue;
            AddComponent(VisualDebuggingComponentIds.Property, component);
        }

        public void ReplaceProperty(string newValue) {
            var component = CreateComponent<PropertyComponent>(VisualDebuggingComponentIds.Property);
            component.value = newValue;
            ReplaceComponent(VisualDebuggingComponentIds.Property, component);
        }

        public void RemoveProperty() {
            RemoveComponent(VisualDebuggingComponentIds.Property);
        }
    }
}

    public partial class VisualDebuggingMatcher {

        static IMatcher<VisualDebuggingEntity> _matcherProperty;

        public static IMatcher<VisualDebuggingEntity> Property {
            get {
                if(_matcherProperty == null) {
                    var matcher = (Matcher<VisualDebuggingEntity>)Matcher<VisualDebuggingEntity>.AllOf(VisualDebuggingComponentIds.Property);
                    matcher.componentNames = VisualDebuggingComponentIds.componentNames;
                    _matcherProperty = matcher;
                }

                return _matcherProperty;
            }
        }
    }
