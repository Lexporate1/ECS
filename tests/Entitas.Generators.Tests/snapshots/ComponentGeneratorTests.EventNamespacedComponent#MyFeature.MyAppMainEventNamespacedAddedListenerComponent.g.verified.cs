//HintName: MyFeature.MyAppMainEventNamespacedAddedListenerComponent.g.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by
//     Entitas.Generators.ComponentGenerator.Events
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using global::MyApp.Main;

namespace MyFeature
{
public interface IMyAppMainEventNamespacedAddedListener
{
    void OnEventNamespacedAdded(Entity entity, string value);
}

public sealed class MyAppMainEventNamespacedAddedListenerComponent : global::Entitas.IComponent
{
    public global::System.Collections.Generic.List<IMyAppMainEventNamespacedAddedListener> Value;
}

public static class MyAppMainEventNamespacedAddedListenerEventEntityExtension
{
    public static Entity AddEventNamespacedAddedListener(this Entity entity, IMyAppMainEventNamespacedAddedListener value)
    {
        var listeners = entity.HasEventNamespacedAddedListener()
            ? entity.GetEventNamespacedAddedListener().Value
            : new global::System.Collections.Generic.List<IMyAppMainEventNamespacedAddedListener>();
        listeners.Add(value);
        return entity.ReplaceEventNamespacedAddedListener(listeners);
    }

    public static void RemoveEventNamespacedAddedListener(this Entity entity, IMyAppMainEventNamespacedAddedListener value, bool destroyListenerWhenEmpty = true)
    {
        var listeners = entity.GetEventNamespacedAddedListener().Value;
        listeners.Remove(value);
        if (destroyListenerWhenEmpty && listeners.Count == 0)
            entity.Destroy();
        else
            entity.ReplaceEventNamespacedAddedListener(listeners);
    }
}

public sealed class MyAppMainEventNamespacedAddedEventSystem : global::Entitas.ReactiveSystem<Entity>
{
    readonly global::System.Collections.Generic.List<IMyAppMainEventNamespacedAddedListener> _listenerBuffer;

    public MyAppMainEventNamespacedAddedEventSystem(MyApp.MainContext context) : base(context)
    {
        _listenerBuffer = new global::System.Collections.Generic.List<IMyAppMainEventNamespacedAddedListener>();
    }

    protected override global::Entitas.ICollector<Entity> GetTrigger(global::Entitas.IContext<Entity> context)
    {
        return global::Entitas.CollectorContextExtension.CreateCollector(
            context, global::Entitas.TriggerOnEventMatcherExtension.Added(MyAppMainEventNamespacedMatcher.EventNamespaced)
        );
    }

    protected override bool Filter(Entity entity)
    {
        return entity.HasEventNamespaced() && entity.HasEventNamespacedAddedListener();
    }

    protected override void Execute(global::System.Collections.Generic.List<Entity> entities)
    {
        foreach (var entity in entities)
        {
            var component = entity.GetEventNamespaced();
            _listenerBuffer.Clear();
            _listenerBuffer.AddRange(entity.GetEventNamespacedAddedListener().Value);
            foreach (var listener in _listenerBuffer)
            {
                listener.OnEventNamespacedAdded(entity, component.Value);
            }
        }
    }
}
}
