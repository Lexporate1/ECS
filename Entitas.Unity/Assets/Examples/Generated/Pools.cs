//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.PoolsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

public static class Pools {

    static Pool[] _allPools;

    public static Pool[] allPools {
        get {
            if (_allPools == null) {
                _allPools = new [] { visualDebugging, blueprints };
            }

            return _allPools;
        }
    }

    static Pool _visualDebugging;

    public static Pool visualDebugging {
        get {
            if (_visualDebugging == null) {
                _visualDebugging = new Pool(VisualDebuggingComponentIds.TotalComponents, 0, new PoolMetaData("VisualDebugging Pool", VisualDebuggingComponentIds.componentNames, VisualDebuggingComponentIds.componentTypes));
                #if (!ENTITAS_DISABLE_VISUAL_DEBUGGING && UNITY_EDITOR)
                if (UnityEngine.Application.isPlaying) {
                    var poolObserver = new Entitas.Unity.VisualDebugging.PoolObserver(_visualDebugging);
                    UnityEngine.Object.DontDestroyOnLoad(poolObserver.entitiesContainer);
                }
                #endif
            }

            return _visualDebugging;
        }
    }

    static Pool _blueprints;

    public static Pool blueprints {
        get {
            if (_blueprints == null) {
                _blueprints = new Pool(BlueprintsComponentIds.TotalComponents, 0, new PoolMetaData("Blueprints Pool", BlueprintsComponentIds.componentNames, BlueprintsComponentIds.componentTypes));
                #if (!ENTITAS_DISABLE_VISUAL_DEBUGGING && UNITY_EDITOR)
                if (UnityEngine.Application.isPlaying) {
                    var poolObserver = new Entitas.Unity.VisualDebugging.PoolObserver(_blueprints);
                    UnityEngine.Object.DontDestroyOnLoad(poolObserver.entitiesContainer);
                }
                #endif
            }

            return _blueprints;
        }
    }
}