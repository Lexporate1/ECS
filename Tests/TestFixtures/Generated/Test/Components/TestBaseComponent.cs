//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TestEntity {

    public BaseComponent @base { get { return (BaseComponent)GetComponent(TestComponentsLookup.Base); } }
    public bool hasBase { get { return HasComponent(TestComponentsLookup.Base); } }

    public void AddBase(int newValue) {
        var index = TestComponentsLookup.Base;
        var component = (BaseComponent)CreateComponent(index, typeof(BaseComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceBase(int newValue) {
        var index = TestComponentsLookup.Base;
        var component = (BaseComponent)CreateComponent(index, typeof(BaseComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveBase() {
        RemoveComponent(TestComponentsLookup.Base);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TestMatcher {

    static Entitas.IMatcher<TestEntity> _matcherBase;

    public static Entitas.IMatcher<TestEntity> Base {
        get {
            if (_matcherBase == null) {
                var matcher = (Entitas.Matcher<TestEntity>)Entitas.Matcher<TestEntity>.AllOf(TestComponentsLookup.Base);
                matcher.componentNames = TestComponentsLookup.componentNames;
                _matcherBase = matcher;
            }

            return _matcherBase;
        }
    }
}
