//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BaseComponent base { get { return (BaseComponent)GetComponent(GameComponentsLookup.Base); } }
    public bool hasBase { get { return HasComponent(GameComponentsLookup.Base); } }

    public void AddBase(float newValue) {
        var index = GameComponentsLookup.Base;
        var component = CreateComponent<BaseComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceBase(float newValue) {
        var index = GameComponentsLookup.Base;
        var component = CreateComponent<BaseComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveBase() {
        RemoveComponent(GameComponentsLookup.Base);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBase;

    public static Entitas.IMatcher<GameEntity> Base {
        get {
            if (_matcherBase == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Base);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBase = matcher;
            }

            return _matcherBase;
        }
    }
}
