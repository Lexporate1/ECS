//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public sealed partial class VisualDebuggingEntity : Entity {

        public ColorComponent color { get { return (ColorComponent)GetComponent(VisualDebuggingComponentIds.Color); } }
        public bool hasColor { get { return HasComponent(VisualDebuggingComponentIds.Color); } }

        public void AddColor(UnityEngine.Color newColor) {
            var component = CreateComponent<ColorComponent>(VisualDebuggingComponentIds.Color);
            component.color = newColor;
            AddComponent(VisualDebuggingComponentIds.Color, component);
        }

        public void ReplaceColor(UnityEngine.Color newColor) {
            var component = CreateComponent<ColorComponent>(VisualDebuggingComponentIds.Color);
            component.color = newColor;
            ReplaceComponent(VisualDebuggingComponentIds.Color, component);
        }

        public void RemoveColor() {
            RemoveComponent(VisualDebuggingComponentIds.Color);
        }
    }
}

    public partial class VisualDebuggingMatcher {

        static IMatcher<VisualDebuggingEntity> _matcherColor;

        public static IMatcher<VisualDebuggingEntity> Color {
            get {
                if(_matcherColor == null) {
                    var matcher = (Matcher<VisualDebuggingEntity>)Matcher<VisualDebuggingEntity>.AllOf(VisualDebuggingComponentIds.Color);
                    matcher.componentNames = VisualDebuggingComponentIds.componentNames;
                    _matcherColor = matcher;
                }

                return _matcherColor;
            }
        }
    }
